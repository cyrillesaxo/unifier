/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Equipment;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-07-06T13:50:52.490-04:00")

@Api(value = "v1", description = "the v1 API")
public interface V1Api {

    @ApiOperation(value = "Get unifier information", notes = "This API will return billing and customer information.", response = Equipment.class, tags={ "unifier", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The request was successful", response = Equipment.class),
        @ApiResponse(code = 400, message = "Bad request error", response = Void.class),
        @ApiResponse(code = 404, message = "Record not found", response = Void.class),
        @ApiResponse(code = 500, message = "The server encountered an unexpected condition which prevented it from fulfilling the request", response = Void.class) })
    
    @RequestMapping(value = "/v1/customer/{customer_id}/equipment",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Equipment>> unifier(@ApiParam(value = "customer id",required=true ) @PathVariable("customer_id") String customerId,@ApiParam(value = "authorization header" ) @RequestHeader(value="authorization", required=false) String authorization,@ApiParam(value = "application user id" ) @RequestHeader(value="applicationId", required=false) String applicationId);

}
